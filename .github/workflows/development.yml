name: development

on:
  push:
    branches-ignore: [ main ]

env:
  SEMVERBOT_VERSION: "1.0.0"

jobs:
  build:
    name: pipeline
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: install python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: install poetry
        run: |
          python3 -m pip install --upgrade poetry

      - name: cache python packages
        id: cache-python-packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry/virtualenvs
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: install python packages
        if: steps.cache-python-packages.outputs.cache-hit != 'true'
        run: |
          poetry install

      - name: set up path
        run: |
          mkdir -p bin
          echo "$(pwd)/bin" >> $GITHUB_PATH

      - name: install semverbot
        run: |
          curl -o bin/sbot -L https://github.com/restechnica/semverbot/releases/download/v${SEMVERBOT_VERSION}/sbot-linux-amd64
          chmod +x bin/sbot

      - name: update version
        run: |
          sbot update version

          current_version="$(sbot get version)"
          release_version="$(sbot predict version)"

          echo "CURRENT_VERSION=${current_version}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${release_version}" >> $GITHUB_ENV

          echo "current version: ${current_version}"
          echo "next version: ${release_version}"

      - name: build
        run: |
          poetry version ${RELEASE_VERSION}
          poetry build
